/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Bean.FoodOrder;
import Bean.FoodProduction;
import Bean.OrderedFood;
import DTO.FoodData;
import DTO.OrderFoodData;
import DTO.RestaurantData;
import Logic.OrderedFoodLogic;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sun.swing.table.DefaultTableCellHeaderRenderer;

/**
 *
 * @author thehackermonk
 */
public class OrderedFoodForm extends javax.swing.JFrame {

    /**
     * Creates new form OrderedFoodForm
     */
    public OrderedFoodForm() {
        initComponents();
    }

    /**
     * Set theme of the form
     */
    public void setTheme() {

        this.getContentPane().setBackground(new Color(246, 252, 252));

        titleLabel.setForeground(new Color(45, 58, 84));

        orderTable.getTableHeader().setDefaultRenderer(new DefaultTableCellHeaderRenderer() {

            @Override
            public void setOpaque(boolean isOpaque) {
                super.setOpaque(true); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void setBackground(Color c) {
                super.setBackground(new Color(45, 58, 84)); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void setForeground(Color c) {
                super.setForeground(new Color(255, 255, 255)); //To change body of generated methods, choose Tools | Templates.
            }

        });

        foodTable.getTableHeader().setDefaultRenderer(new DefaultTableCellHeaderRenderer() {

            @Override
            public void setOpaque(boolean isOpaque) {
                super.setOpaque(true); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void setBackground(Color c) {
                super.setBackground(new Color(45, 58, 84)); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void setForeground(Color c) {
                super.setForeground(new Color(255, 255, 255)); //To change body of generated methods, choose Tools | Templates.
            }

        });

    }

    /**
     * To clear the table
     *
     * @param tableModel : table to be cleared
     */
    public void clearTable(DefaultTableModel tableModel) {

        while (tableModel.getRowCount() > 0) {
            tableModel.removeRow(0);
        }

    }

    /**
     * To get all the orders to the table
     */
    public void refreshOrderTable() {

        DefaultTableModel orderTableModel = (DefaultTableModel) orderTable.getModel();

        RestaurantData restaurantData = new RestaurantData();
        OrderFoodData orderFoodData = new OrderFoodData();

        ArrayList<FoodOrder> foodOrderList;
        Iterator<FoodOrder> foodOrderListIterator;

        clearTable(orderTableModel);

        foodOrderList = orderFoodData.getAllOrders();
        foodOrderListIterator = foodOrderList.iterator();

        while (foodOrderListIterator.hasNext()) {

            FoodOrder foodOrder = foodOrderListIterator.next();

            if (foodOrder.getStatus().equals("Initiated")) {
                orderTableModel.addRow(new Object[]{foodOrder.getOrderNo(), foodOrder.getRoomNo(), restaurantData.getRestaurantDetails(foodOrder.getRestaurantNo()).getName()});
            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        foodTable = new javax.swing.JTable();
        viewOrderButton = new javax.swing.JButton();
        completeOrderButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jScrollPane1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        orderTable.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Order No", "Room No", "Restaurant"
            }
        ));
        jScrollPane1.setViewportView(orderTable);

        jScrollPane2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        foodTable.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        foodTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Food", "Quantity"
            }
        ));
        jScrollPane2.setViewportView(foodTable);

        viewOrderButton.setBackground(new java.awt.Color(108, 160, 209));
        viewOrderButton.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        viewOrderButton.setForeground(new java.awt.Color(255, 255, 255));
        viewOrderButton.setText("VIEW ORDER");
        viewOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderButtonActionPerformed(evt);
            }
        });

        completeOrderButton.setBackground(new java.awt.Color(108, 160, 209));
        completeOrderButton.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        completeOrderButton.setForeground(new java.awt.Color(255, 255, 255));
        completeOrderButton.setText("COMPLETE ORDER");
        completeOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeOrderButtonActionPerformed(evt);
            }
        });

        closeButton.setBackground(new java.awt.Color(255, 0, 0));
        closeButton.setForeground(new java.awt.Color(255, 255, 255));
        closeButton.setText("X");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        titleLabel.setText("Food Order");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(viewOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(completeOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(228, 228, 228))
            .addGroup(layout.createSequentialGroup()
                .addGap(627, 627, 627)
                .addComponent(titleLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(titleLabel)
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewOrderButton)
                    .addComponent(completeOrderButton))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus

        setTheme();

        DefaultTableModel foodTableModel = (DefaultTableModel) foodTable.getModel();

        refreshOrderTable();
        clearTable(foodTableModel);
        orderTable.requestFocus();

    }//GEN-LAST:event_formWindowGainedFocus

    private void viewOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderButtonActionPerformed

        FoodData foodData = new FoodData();
        OrderFoodData orderFoodData = new OrderFoodData();

        DefaultTableModel orderTableModel = (DefaultTableModel) orderTable.getModel();
        DefaultTableModel foodTableModel = (DefaultTableModel) foodTable.getModel();

        int row, orderNo;

        ArrayList<OrderedFood> orderedFoodList;
        Iterator<OrderedFood> orderedFoodListIterator;

        row = orderTable.getSelectedRow();

        if (row < 0) {

            JOptionPane.showMessageDialog(null, "Please select an order");

        } else {

            orderNo = Integer.parseInt(orderTableModel.getValueAt(row, 0).toString());

            clearTable(foodTableModel);

            orderedFoodList = orderFoodData.getOrderDetails(orderNo);
            orderedFoodListIterator = orderedFoodList.iterator();

            while (orderedFoodListIterator.hasNext()) {

                OrderedFood orderedFood = orderedFoodListIterator.next();

                foodTableModel.addRow(new Object[]{foodData.getFoodDetails(orderedFood.getFoodNo()).getName(), orderedFood.getQuantity()});

            }
        }

    }//GEN-LAST:event_viewOrderButtonActionPerformed

    private void completeOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeOrderButtonActionPerformed

        OrderedFoodLogic orderedFoodLogic = new OrderedFoodLogic();
        FoodData foodData = new FoodData();

        DefaultTableModel orderTableModel = (DefaultTableModel) orderTable.getModel();
        DefaultTableModel foodTableModel = (DefaultTableModel) foodTable.getModel();

        String restaurant;
        int row, roomNo;

        ArrayList<FoodProduction> foodProductionList = new ArrayList<>();

        row = orderTable.getSelectedRow();
        restaurant = orderTableModel.getValueAt(row, 2).toString();
        roomNo = Integer.parseInt(orderTableModel.getValueAt(row, 1).toString());

        for (int i = 0; i < foodTableModel.getRowCount(); i++) {

            FoodProduction foodProduction = new FoodProduction();

            foodProduction.setFoodNo(foodData.getFoodDetails(foodTableModel.getValueAt(row, 0).toString()).getNdbNo());

            foodProduction.setQuantity(Integer.parseInt(foodTableModel.getValueAt(row, 1).toString()));

            foodProductionList.add(foodProduction);

        }

        if (orderedFoodLogic.completeOrder(restaurant, roomNo, foodProductionList)) {

            JOptionPane.showMessageDialog(null, "Order completed!");

        }

    }//GEN-LAST:event_completeOrderButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed

        this.setVisible(false);
        new FoodnBeverageMenu().show();

    }//GEN-LAST:event_closeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
 /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderedFoodForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderedFoodForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderedFoodForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderedFoodForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderedFoodForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton completeOrderButton;
    private javax.swing.JTable foodTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderTable;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton viewOrderButton;
    // End of variables declaration//GEN-END:variables
}
