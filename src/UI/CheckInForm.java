/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Bean.Foreigner;
import Bean.FrontOffice;
import Bean.Identity;
import Bean.Room;
import Bean.RoomType;
import DTO.FrontOfficeData;
import DTO.RoomTypeData;
import DTO.RoomsData;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import java.sql.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author thehackermonk
 */
public class CheckInForm extends javax.swing.JFrame {

    /**
     * Creates new form CheckInForm
     */
    public CheckInForm() {
        initComponents();
    }

    /**
     * To clear the fields in check in form
     */
    public void clearCheckInForm() {

        nameTextField.setText("");
        addressTextArea.setText("");
        telTextField.setText("");
        noOfPeopleSlider.setValue(1);
        purposeOfVisitTextArea.setText("");

    }

    /**
     * Refresh the data of type of rooms combo box
     *
     * @param comboBoxModel combo box
     */
    public void refreshRoomTypeCombo(DefaultComboBoxModel comboBoxModel) {

        RoomTypeData roomTypeData = new RoomTypeData();

        ArrayList<RoomType> roomTypeList = roomTypeData.getAllRoomTypeDetails();
        Iterator<RoomType> roomTypeListIterator = roomTypeList.iterator();

        comboBoxModel.removeAllElements();

        while (roomTypeListIterator.hasNext()) {

            RoomType roomType = roomTypeListIterator.next();
            comboBoxModel.addElement(roomType.getType());

        }

    }

    /**
     * Refresh the room no's according to the selected type
     *
     * @param comboBoxModel
     * @param roomType
     */
    public void refreshRoomNoCombo(DefaultComboBoxModel comboBoxModel, String roomType) {

        RoomsData roomsData = new RoomsData();

        ArrayList<Room> roomList = roomsData.getRoomNoOfType(roomType);
        Iterator<Room> roomListIterator = roomList.iterator();

        comboBoxModel.removeAllElements();

        while (roomListIterator.hasNext()) {

            Room room = roomListIterator.next();
            comboBoxModel.addElement(room.getRoomNo());

        }

    }

    /**
     * Year from 1940 to the current year
     *
     * @param comboBoxModel
     */
    public void refreshYearOfBirthCombo(DefaultComboBoxModel comboBoxModel) {

        int year, i;

        year = Calendar.getInstance().get(Calendar.YEAR);

        comboBoxModel.removeAllElements();

        for (i = year; i > 1940; i--) {
            comboBoxModel.addElement(i);
        }

    }

    /**
     * Get today's date in SQL format
     *
     * @return today's date
     */
    public String getTodaysDate() {

        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDateTime now = LocalDateTime.now();

        return dateTimeFormatter.format(now);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        adhaarDialog = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        adhaarTextField = new javax.swing.JTextField();
        yearOfBirthCombo = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        adhaarCompleteButton = new javax.swing.JButton();
        passportDialog = new javax.swing.JDialog();
        passportTextField = new javax.swing.JTextField();
        nationalityComboBox = new javax.swing.JComboBox<>();
        passportIssueDate = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        passportCompleteButton = new javax.swing.JButton();
        nameTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressTextArea = new javax.swing.JTextArea();
        telTextField = new javax.swing.JTextField();
        foreignerCheckBox = new javax.swing.JCheckBox();
        roomTypeCombo = new javax.swing.JComboBox<>();
        roomNoCombo = new javax.swing.JComboBox<>();
        noOfPeopleSlider = new javax.swing.JSlider();
        jScrollPane2 = new javax.swing.JScrollPane();
        purposeOfVisitTextArea = new javax.swing.JTextArea();
        noOfPeopleLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        checkInButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Adhaar No.");

        adhaarTextField.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        adhaarTextField.setText("jTextField1");

        yearOfBirthCombo.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        yearOfBirthCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel9.setText("Year of Birth");

        adhaarCompleteButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        adhaarCompleteButton.setText("Complete Check In");
        adhaarCompleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adhaarCompleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adhaarDialogLayout = new javax.swing.GroupLayout(adhaarDialog.getContentPane());
        adhaarDialog.getContentPane().setLayout(adhaarDialogLayout);
        adhaarDialogLayout.setHorizontalGroup(
            adhaarDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adhaarDialogLayout.createSequentialGroup()
                .addGroup(adhaarDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adhaarDialogLayout.createSequentialGroup()
                        .addGap(298, 298, 298)
                        .addGroup(adhaarDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(adhaarDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(yearOfBirthCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adhaarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(adhaarDialogLayout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(adhaarCompleteButton)))
                .addContainerGap(299, Short.MAX_VALUE))
        );
        adhaarDialogLayout.setVerticalGroup(
            adhaarDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adhaarDialogLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addGroup(adhaarDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(adhaarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(adhaarDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearOfBirthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(39, 39, 39)
                .addComponent(adhaarCompleteButton)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        passportTextField.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        passportTextField.setText("jTextField1");

        nationalityComboBox.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nationalityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua and Barbuda", "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei Darussalam", "Bulgaria", "Burkina Faso", "Burundi", "Cabo Verde", "Cambodia", "Cameroon", "Canada", "Central African Republic", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Cyprus", "Czechia", "CÃ´te d'Ivoire", "Republic of Korea", "Republic of the Congo", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Eswatini", "Ethiopia", "Faroe Islands", "Fiji", "Finland", "France", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Greece", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Honduras", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Lithuania", "Luxembourg", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "North Macedonia", "Norway", "Oman", "Pakistan", "Palau", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Republic of Korea", "Republic of Moldova", "Romania", "Russian Federation", "Rwanda", "Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Sweden", "Switzerland", "Syrian Arab Republic", "Tajikistan", "Thailand", "Timor-Leste", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United Republic of Tanzania", "United States of America", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela (Bolivarian Republic of)", "Viet Nam", "Yemen", "Zambia", "Zimbabwe" }));

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Passport No.");

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel11.setText("Nationality");

        jLabel12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel12.setText("Date of Issue");

        passportCompleteButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        passportCompleteButton.setText("Complete Check In");
        passportCompleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passportCompleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout passportDialogLayout = new javax.swing.GroupLayout(passportDialog.getContentPane());
        passportDialog.getContentPane().setLayout(passportDialogLayout);
        passportDialogLayout.setHorizontalGroup(
            passportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, passportDialogLayout.createSequentialGroup()
                .addContainerGap(246, Short.MAX_VALUE)
                .addGroup(passportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(passportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passportCompleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(passportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(nationalityComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(passportIssueDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(passportTextField)))
                .addGap(250, 250, 250))
        );
        passportDialogLayout.setVerticalGroup(
            passportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passportDialogLayout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addGroup(passportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passportTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(passportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nationalityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(passportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passportIssueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(28, 28, 28)
                .addComponent(passportCompleteButton)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        nameTextField.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nameTextField.setText("jTextField1");

        addressTextArea.setColumns(20);
        addressTextArea.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        addressTextArea.setLineWrap(true);
        addressTextArea.setRows(5);
        addressTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addressTextAreaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(addressTextArea);

        telTextField.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        telTextField.setText("jTextField2");

        foreignerCheckBox.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        foreignerCheckBox.setText("Are you a foreigner?");

        roomTypeCombo.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        roomTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        roomTypeCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                roomTypeComboFocusLost(evt);
            }
        });

        roomNoCombo.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        roomNoCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        noOfPeopleSlider.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        noOfPeopleSlider.setMaximum(4);
        noOfPeopleSlider.setMinimum(1);
        noOfPeopleSlider.setValue(1);
        noOfPeopleSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                noOfPeopleSliderStateChanged(evt);
            }
        });

        purposeOfVisitTextArea.setColumns(20);
        purposeOfVisitTextArea.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        purposeOfVisitTextArea.setLineWrap(true);
        purposeOfVisitTextArea.setRows(5);
        purposeOfVisitTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                purposeOfVisitTextAreaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(purposeOfVisitTextArea);

        noOfPeopleLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        noOfPeopleLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        noOfPeopleLabel.setText("0");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Address");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Telephone No.");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Room Type");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Room No");

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("No of People");

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Purpose of Visit");

        checkInButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        checkInButton.setText("CHECK IN");
        checkInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInButtonActionPerformed(evt);
            }
        });

        closeButton.setText("X");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(498, 498, 498)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(foreignerCheckBox)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(noOfPeopleSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(roomNoCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, 120, Short.MAX_VALUE)
                            .addComponent(roomTypeCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(telTextField, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noOfPeopleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap(498, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(checkInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(536, 536, 536))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(closeButton)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(closeButton)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(foreignerCheckBox)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roomTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roomNoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(noOfPeopleSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(noOfPeopleLabel)))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(checkInButton)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus

        DefaultComboBoxModel roomTypeComboBoxModel = (DefaultComboBoxModel) roomTypeCombo.getModel();
        DefaultComboBoxModel roomNoComboBoxModel = (DefaultComboBoxModel) roomNoCombo.getModel();

        clearCheckInForm();
        refreshRoomTypeCombo(roomTypeComboBoxModel);

        String roomType = roomTypeCombo.getSelectedItem().toString();
        refreshRoomNoCombo(roomNoComboBoxModel, roomType);

    }//GEN-LAST:event_formWindowGainedFocus

    private void roomTypeComboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_roomTypeComboFocusLost

        RoomTypeData roomTypeData = new RoomTypeData();

        DefaultComboBoxModel roomNoComboBoxModel = (DefaultComboBoxModel) roomNoCombo.getModel();

        String roomType = roomTypeCombo.getSelectedItem().toString();
        noOfPeopleSlider.setMaximum(roomTypeData.getRoomCapacity(roomType));

        refreshRoomNoCombo(roomNoComboBoxModel, roomType);

        if (roomNoCombo.getItemCount() == 0) {

            checkInButton.setEnabled(false);

        } else {

            checkInButton.setEnabled(true);

        }

    }//GEN-LAST:event_roomTypeComboFocusLost

    private void noOfPeopleSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_noOfPeopleSliderStateChanged

        int counter = noOfPeopleSlider.getValue();
        noOfPeopleLabel.setText(String.valueOf(counter));

    }//GEN-LAST:event_noOfPeopleSliderStateChanged

    private void checkInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInButtonActionPerformed

        if (foreignerCheckBox.isSelected()) {

            passportTextField.setText("");
            passportDialog.setSize(800, 500);
            passportDialog.show();

        } else {

            DefaultComboBoxModel yearOfBirthComboBoxModel = (DefaultComboBoxModel) this.yearOfBirthCombo.getModel();

            adhaarTextField.setText("");
            refreshYearOfBirthCombo(yearOfBirthComboBoxModel);
            adhaarDialog.setSize(800, 500);
            adhaarDialog.show();

        }

    }//GEN-LAST:event_checkInButtonActionPerformed

    private void adhaarCompleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adhaarCompleteButtonActionPerformed

        Identity identity = new Identity();
        FrontOffice frontOffice = new FrontOffice();
        RoomsData roomsData = new RoomsData();
        FrontOfficeData frontOfficeData = new FrontOfficeData();

        identity.setName(nameTextField.getText());
        identity.setAddress(addressTextArea.getText());
        identity.setTelephoneNo(telTextField.getText());
        identity.setForeigner(false);
        identity.setAdhaar_no(Long.parseLong(adhaarTextField.getText()));
        identity.setYearOfBirth(Integer.parseInt(yearOfBirthCombo.getSelectedItem().toString()));

        frontOffice.setRoomNo(Integer.parseInt(roomNoCombo.getSelectedItem().toString()));
        frontOffice.setCheckIn(Date.valueOf(getTodaysDate()));
        frontOffice.setNoOfPersons(noOfPeopleSlider.getValue());
        frontOffice.setVisitingPurpose(purposeOfVisitTextArea.getText());

        if (roomsData.occupyRoom(frontOffice) && frontOfficeData.nativeCheckIn(identity, frontOffice)) {

            JOptionPane.showMessageDialog(null, "Check In successfull!");

        }

    }//GEN-LAST:event_adhaarCompleteButtonActionPerformed

    private void passportCompleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passportCompleteButtonActionPerformed

        Foreigner foreigner = new Foreigner();
        FrontOffice frontOffice = new FrontOffice();

        RoomsData roomsData = new RoomsData();
        FrontOfficeData frontOfficeData = new FrontOfficeData();

        foreigner.setName(nameTextField.getText());
        foreigner.setAddress(addressTextArea.getText());
        foreigner.setTelephoneNo(telTextField.getText());
        foreigner.setForeigner(true);
        foreigner.setPassportNo(passportTextField.getText());
        foreigner.setNationality(nationalityComboBox.getSelectedItem().toString());
        foreigner.setIssueDate(new Date(passportIssueDate.getDate().getTime()));

        frontOffice.setRoomNo(Integer.parseInt(roomNoCombo.getSelectedItem().toString()));
        frontOffice.setCheckIn(Date.valueOf(getTodaysDate()));
        frontOffice.setNoOfPersons(noOfPeopleSlider.getValue());
        frontOffice.setVisitingPurpose(purposeOfVisitTextArea.getText());

        if (roomsData.occupyRoom(frontOffice) && frontOfficeData.foreignerCheckIn(foreigner, frontOffice)) {

            JOptionPane.showMessageDialog(null, "Check In successfull!");

        }

    }//GEN-LAST:event_passportCompleteButtonActionPerformed

    private void addressTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressTextAreaKeyReleased

        String string;

        string = addressTextArea.getText();

        if (string.length() > 300) {

            string = string.substring(0, string.length() - 1);
            addressTextArea.setText(string);

        }

    }//GEN-LAST:event_addressTextAreaKeyReleased

    private void purposeOfVisitTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_purposeOfVisitTextAreaKeyReleased

        String string;

        string = purposeOfVisitTextArea.getText();

        if (string.length() > 100) {

            string = string.substring(0, string.length() - 1);
            purposeOfVisitTextArea.setText(string);

        }

    }//GEN-LAST:event_purposeOfVisitTextAreaKeyReleased

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed

        this.setVisible(false);
        new FrontOfficeMenu().show();

    }//GEN-LAST:event_closeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckInForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckInForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckInForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckInForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckInForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea addressTextArea;
    private javax.swing.JButton adhaarCompleteButton;
    private javax.swing.JDialog adhaarDialog;
    private javax.swing.JTextField adhaarTextField;
    private javax.swing.JButton checkInButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JCheckBox foreignerCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JComboBox<String> nationalityComboBox;
    private javax.swing.JLabel noOfPeopleLabel;
    private javax.swing.JSlider noOfPeopleSlider;
    private javax.swing.JButton passportCompleteButton;
    private javax.swing.JDialog passportDialog;
    private com.toedter.calendar.JDateChooser passportIssueDate;
    private javax.swing.JTextField passportTextField;
    private javax.swing.JTextArea purposeOfVisitTextArea;
    private javax.swing.JComboBox<String> roomNoCombo;
    private javax.swing.JComboBox<String> roomTypeCombo;
    private javax.swing.JTextField telTextField;
    private javax.swing.JComboBox<String> yearOfBirthCombo;
    // End of variables declaration//GEN-END:variables
}
